name: Build the program

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Install libraries
      run: sudo apt-get update && sudo apt-get install libjpeg-dev libpng-dev libopengl-dev libglew-dev libglfw3-dev

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/.build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DOpenGL_GL_PREFERENCE=GLVND

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/.build --config ${{env.BUILD_TYPE}}

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MapProjections-Linux
        path: |
          ${{github.workspace}}/.build/MapProjection
          ${{github.workspace}}/.build/res

  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Prepare msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        pacboy: >-
          toolchain:p
          cmake:p
          libjpeg:p
          libpng:p
          glew:p
          glfw:p
          ninja:p

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -G Ninja -B $GITHUB_WORKSPACE/.build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build $GITHUB_WORKSPACE/.build

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MapProjections-Windows
        path: |
          ${{github.workspace}}\.build\MapProjection.exe
          ${{github.workspace}}\.build\res
