cmake_minimum_required(VERSION 3.10)

project(MapProjection)

# the name of the target operating system
set(CMAKE_SYSTEM_NAME Windows)

# which compilers to use for C and C++
set(CMAKE_C_COMPILER   x86_64-w64-mingw32-gcc)
set(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)
# set(CMAKE_PREFIX_PATH "/;/usr/x86_64-w64-mingw32")

find_package(OpenGL REQUIRED)
find_package(JPEG REQUIRED)
find_package(GLEW REQUIRED)

add_executable(MapProjection
    src/main.cpp
    src/shaders.cpp
    src/images.cpp
)

target_include_directories(MapProjection PRIVATE ./lib/glfw/include)
target_include_directories(MapProjection PRIVATE "${OPENGL_INCLUDE_DIR}" "${JPEG_INCLUDE_DIRS}" "${GLEW_INCLUDE_DIRS}")

find_library(GLFW_LIB glfw3dll PATHS ./lib/glfw/lib-mingw-w64/)
find_library(GLEW_LIB glew32.dll PATHS ./lib/)
find_library(JPEG_LIB jpeg.dll PATHS ./lib/)

# target_link_libraries(MapProjection ${GLFW_LIB} OpenGL::GL GLEW::glew JPEG::JPEG)
target_link_libraries(MapProjection ${GLFW_LIB} opengl32 ${GLEW_LIB} ${JPEG_LIB})
target_link_options(MapProjection PRIVATE -static-libgcc -static-libstdc++)
